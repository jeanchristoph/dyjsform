export default class JsonService{constructor(){this._json=[];this._outputJson=[]}get json(){return this._json}set json(json){switch(typeof json){case"string":this._json=this.strToJson(json);break;default:this._json=json;break}this.outputJson=json}addRow(entity){const updatedJson=this._json;updatedJson.push(entity);this.json=updatedJson;return this}removeRow(){const updatedJson=this._json;updatedJson.pop();this.json=updatedJson;return this}get outputJson(){return this._outputJson}set outputJson(json){console.log("set outputJson");this._outputJson=this.reduceByNameValue(json);console.log(this._outputJson)}isJsonString(str){try{JSON.parse(str)}catch(e){console.log(e);return false}return true}jsonToStr(jsonObject){return JSON.stringify(jsonObject,null,2)}strToJson(str){try{return JSON.parse(str)}catch(error){console.error("Erreur lors du parsing JSON :",error);return null}}reduceByNameValue(json){var ReducedJson=[];for(const row of json){let rowJson=[];for(let field of row){rowJson.push({[field["name"]]:field["value"]})}ReducedJson.push(rowJson)}return ReducedJson}loadJson(){let entitiesArray=[];let entityArray=[];if(document.querySelector("#dyjsform_options")){const jsonString=document.querySelector("#dyjsform_options").value;if(jsonString){try{const jsonString=document.querySelector("#dyjsform_options").value;console.log(jsonString)}catch(error){console.error("Erreur lors de l'analyse du JSON : ",error)}}}return entityArray}}