export default class ValidatorService{static validateMaxCount(json){const valueOccurrences={};json.forEach(((row,rowIndex)=>{row.forEach((entity=>{if(entity.htmlElement==="select"&&Array.isArray(entity.options)){const selectedOption=entity.options.find((opt=>opt.value===entity.value));if(selectedOption&&selectedOption.maxCount!==null){const{value:value,maxCount:maxCount}=selectedOption;const key=`${entity.name}:${value}`;if(!valueOccurrences[key]){valueOccurrences[key]={entityName:entity.name,value:value,maxCount:maxCount,occurrences:[]}}valueOccurrences[key].occurrences.push({rowIndex:rowIndex,name:entity.name})}}}))}));const errors=[];for(const[key,data]of Object.entries(valueOccurrences)){const{maxCount:maxCount,occurrences:occurrences,entityName:entityName,value:value}=data;if(occurrences.length>maxCount){errors.push({entityName:entityName,value:value,maxCount:maxCount,occurrences:occurrences,message:`Pour "${entityName}", la valeur "${value}" ayant maxCount = ${maxCount} est utilisée ${occurrences.length} fois, ce qui dépasse la limite.`})}}return{valid:errors.length===0,errors:errors}}}